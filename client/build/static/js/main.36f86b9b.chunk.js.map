{"version":3,"sources":["components/Grid/index.js","components/Jumbotron/index.js","pages/Saved.js","components/Form/index.js","components/BookDetails/index.js","components/Card/index.js","utils/API.js","pages/Search.js","components/Nav/index.js","components/Wrapper/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","_ref","fluid","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Jumbotron","style","height","clear","paddingTop","textAlign","Saved","components_Jumbotron","Form","props","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","onClick","handleFormSubmit","BookDetails","alt","title","src","margin","author","description","href","view","Card","heading","API","search","axios","get","Search","state","results","loadBookSearch","then","res","_this","setState","data","catch","err","console","log","event","target","Object","defineProperty","preventDefault","this","components_Card","components_Form","volumeInfo","components_BookDetails","imageLinks","thumbnail","authors","items","previewLink","Component","Nav","Link","to","window","location","pathname","Wrapper","assign","Footer","App","BrowserRouter","components_Nav","components_Wrapper","Route","exact","path","component","components_Footer","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qRAKO,SAASA,EAATC,GAAwC,IAAnBC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,SACjC,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAAC,OAAcN,EAAQ,SAAW,KAAOC,GAIxD,SAASM,EAATC,GAAkC,IAAnBR,EAAmBQ,EAAnBR,MAAOC,EAAYO,EAAZP,SAC3B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,MAAAC,OAAQN,EAAQ,SAAW,KAAOC,GAKlD,SAASQ,EAATC,GAAiC,IAAlBC,EAAkBD,EAAlBC,KAAMV,EAAYS,EAAZT,SAC1B,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAWM,EACRC,MAAM,KACNC,IAAI,SAAAF,GAAI,MAAI,OAASA,IACrBG,KAAK,MAEPb,GCXQc,MAXf,SAAAhB,GAAiC,IAAZE,EAAYF,EAAZE,SACnB,OACEC,EAAAC,EAAAC,cAAA,OACEY,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,WAAY,IAAKC,UAAW,UACjEf,UAAU,yBAETJ,ICcQoB,MAjBf,WACI,OACInB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkB,EAAD,KACIpB,EAAAC,EAAAC,cAAA,6BAEJF,EAAAC,EAAAC,cAACN,EAAD,KACII,EAAAC,EAAAC,cAACG,EAAD,KACIL,EAAAC,EAAAC,cAACK,EAAD,CAAKE,KAAK,8DCWfY,MAtBf,SAAeC,GACb,OACEtB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,SAAOqB,QAAQ,UAAf,UACAvB,EAAAC,EAAAC,cAAA,SACEsB,SAAUF,EAAMG,kBAChBC,MAAOJ,EAAMI,MACbC,KAAK,SACLC,KAAK,OACLzB,UAAU,eACV0B,YAAY,oBACZC,GAAG,WAEL9B,EAAAC,EAAAC,cAAA,UAAQ6B,QAAST,EAAMU,iBAAkB7B,UAAU,mBAAnD,aCHO8B,MAXf,SAAqBX,GACnB,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKgC,IAAKZ,EAAMa,MAAOhC,UAAU,YAAYiC,IAAKd,EAAMc,IAAKtB,MAAO,CAAEuB,OAAQ,YAC9ErC,EAAAC,EAAAC,cAAA,wBAAgBoB,EAAMgB,QACtBtC,EAAAC,EAAAC,cAAA,sBAAcoB,EAAMiB,aACpBvC,EAAAC,EAAAC,cAAA,QAAMsC,KAAMlB,EAAMmB,MAAlB,aCKSC,MAXf,SAAcpB,GACZ,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAKoB,EAAMqB,UAEb3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAamB,EAAMvB,6BCNzB6C,EAAA,CACXC,OAAQ,WACJ,OAAOC,IAAMC,IAAI,oHC+EVC,6MA1EXC,MAAM,CACFC,QAAS,GACTL,OAAQ,MAQZM,eAAiB,WACfP,EAAIC,SACHO,KAAK,SAAAC,GAAG,OAAIC,EAAKC,SAAS,CAAEL,QAASG,EAAIG,SACzCC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAG5BjC,kBAAoB,SAAAoC,GAClB,IAAMnC,EAAQmC,EAAMC,OAAOpC,MACrBC,EAAOkC,EAAMC,OAAOnC,KAC1B2B,EAAKC,SAALQ,OAAAC,EAAA,EAAAD,CAAA,GACGpC,EAAOD,OAKZM,iBAAmB,SAAA6B,GACjBA,EAAMI,iBACNX,EAAKH,eAAeG,EAAKL,MAAMJ,4FApBjCqB,KAAKf,kDAyBD,OACInD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkB,EAAD,KACIpB,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,oDAEJF,EAAAC,EAAAC,cAACN,EAAD,KACEI,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAACK,EAAD,CAAKE,KAAK,SACRT,EAAAC,EAAAC,cAACiE,EAAD,CAAMxB,QAAQ,eACZ3C,EAAAC,EAAAC,cAACkE,EAAD,CACA1C,MAAOwC,KAAKjB,MAAMJ,OAClBpB,kBAAmByC,KAAKzC,kBACxBO,iBAAkBkC,KAAKlC,sBAK7BhC,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAACK,EAAD,CAAKE,KAAK,SACRT,EAAAC,EAAAC,cAACiE,EAAD,CACExB,QAASuB,KAAKjB,MAAMC,QAAQmB,WAAWlC,OAAS,qBAE/C+B,KAAKjB,MAAMC,QAAQmB,WAAWlC,MAC7BnC,EAAAC,EAAAC,cAACoE,EAAD,CACElC,IAAK8B,KAAKjB,MAAMC,QAAQmB,WAAWE,WAAWC,UAC9ClC,OAAQ4B,KAAKjB,MAAMC,QAAQmB,WAAWI,QACtClC,YAAa2B,KAAKjB,MAAMyB,MAAML,WAAW9B,YACzCE,KAAMyB,KAAKjB,MAAMC,QAAQmB,WAAWM,cAGtC3E,EAAAC,EAAAC,cAAA,+CAhEL0E,qBCiCNC,SArCH,SAAAvD,GAAK,OACbtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAM3E,UAAU,eAAe4E,GAAG,KAAlC,iBAIR/E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CACIC,GAAG,IACH5E,UACiC,MAA7B6E,OAAOC,SAASC,UAAiD,WAA7BF,OAAOC,SAASC,SAClD,kBACA,YALV,WAWJlF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CACIC,GAAG,YACH5E,UAAwC,cAA7B6E,OAAOC,SAASC,SAA2B,kBAAoB,YAF9E,sBCpBLC,MAJf,SAAiB7D,GACf,OAAOtB,EAAAC,EAAAC,cAAA,OAAA6D,OAAAqB,OAAA,CAAMjF,UAAU,WAAcmB,WCOxB+D,MARf,WACE,OACErF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,uCCoBSoF,EAhBH,WACV,OACEtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACAvF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsF,EAAD,MACAxF,EAAAC,EAAAC,cAACuF,EAAD,KACEzF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7C,IACjChD,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW7C,IACtChD,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAW1E,KAE3CnB,EAAAC,EAAAC,cAAC4F,EAAD,SCRcC,QACW,cAA7Bf,OAAOC,SAASe,UAEe,UAA7BhB,OAAOC,SAASe,UAEhBhB,OAAOC,SAASe,SAASC,MACvB,2DCZNC,IAASC,OAAOnG,EAAAC,EAAAC,cAACkG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrD,KAAK,SAAAsD,GACjCA,EAAaC","file":"static/js/main.36f86b9b.chunk.js","sourcesContent":["import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron text-center\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport {Container, Row, Col} from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\n\nfunction Saved() {\n    return (\n        <div>\n            <Jumbotron>\n                <h1>My Saved Books</h1>\n            </Jumbotron>\n            <Container>\n                <Row>\n                    <Col size=\"md-12\">\n                        \n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Saved;","import React from \"react\";\n\nfunction Form (props) {\n  return (\n    <form>\n      <div className=\"input-group input-group-lg\">\n        <label htmlFor=\"search\">Title:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search For a Book\"\n          id=\"search\"\n        />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;","import React from \"react\";\n\nfunction BookDetails(props) {\n  return (\n    <div className=\"text-center\">\n      <img alt={props.title} className=\"img-fluid\" src={props.src} style={{ margin: \"0 auto\" }} />\n      <h3>Author(s): {props.author}</h3>\n      <h3>Summary: {props.description}</h3>\n      <link href={props.view}>Preview</link>\n    </div>\n  );\n}\n\nexport default BookDetails;","import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        <h2>{props.heading}</h2>\n      </div>\n      <div className=\"card-body\">{props.children}</div>\n    </div>\n  );\n}\n\nexport default Card;","import axios from \"axios\";\n\nexport default {\n    search: function() {\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=time&printType=books&key=AIzaSyDGoqMMopeOfbbsJ8Re6SQHZS-lKYtYpVU\");\n    }\n};","import React, {Component} from \"react\";\nimport {Container, Row, Col} from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Form from \"../components/Form\";\nimport BookDetails from \"../components/BookDetails\";\nimport Card from \"../components/Card\";\nimport API from \"../utils/API\";\n\nclass Search extends Component {\n    state={\n        results: [],\n        search: \"\"    \n    };\n\n    // When the component mounts, load the book search\n    componentDidMount() {\n    this.loadBookSearch();\n    }\n\n    loadBookSearch = () => {\n      API.search()\n      .then(res => this.setState({ results: res.data}))\n      .catch(err => console.log(err));\n    }\n\n    handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    // When the form is submitted, search the API for the value of `this.state.search`\n    handleFormSubmit = event => {\n      event.preventDefault();\n      this.loadBookSearch(this.state.search);\n    };\n\n\n    render() {\n        return (\n            <div>\n                <Jumbotron>\n                    <h1>Google Book Search</h1>\n                    <h2>Search for and Save Books of Interest</h2>\n                </Jumbotron>\n                <Container>\n                  <Row>\n                    <Col size=\"md-12\">\n                      <Card heading=\"Book Search\">\n                        <Form\n                        value={this.state.search}\n                        handleInputChange={this.handleInputChange}\n                        handleFormSubmit={this.handleFormSubmit}\n                        />\n                      </Card>\n                    </Col>        \n                  </Row>\n                  <Row>\n                    <Col size=\"md-12\">\n                      <Card\n                        heading={this.state.results.volumeInfo.title || \"Search for a Book\"}\n                      >\n                        {this.state.results.volumeInfo.title ? (\n                          <BookDetails\n                            src={this.state.results.volumeInfo.imageLinks.thumbnail}\n                            author={this.state.results.volumeInfo.authors}\n                            description={this.state.items.volumeInfo.description}\n                            view={this.state.results.volumeInfo.previewLink}\n                          />\n                        ) : (\n                          <h3>No Results to Display</h3>\n                        )}\n                      </Card>\n                    </Col>\n                  </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Search;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nconst Nav = props =>\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <div className=\"container-fluid\">\n            <div className=\"navbar-header\">\n                <Link className=\"navbar-brand\" to=\"/\">\n                Google Books\n                </Link>\n                    </div>\n        <div>\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <Link\n                        to=\"/\"\n                        className={\n                            window.location.pathname === \"/\" || window.location.pathname === \"/books\"\n                            ? \"nav-link active\"\n                            : \"nav-link\"\n                        }\n                        >\n                        Search\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link\n                        to=\"/books:id\"\n                        className={window.location.pathname === \"/books:id\" ? \"nav-link active\" : \"nav-link\"}\n                        >\n                        Saved\n                    </Link>\n                </li>\n            </ul>\n            </div>\n        </div>\n    </nav>\n\n\n      \nexport default Nav;\n\n\n  \n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Whitney Crawford 2019</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Saved from \"./pages/Saved\";\nimport Search from \"./pages/Search\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport Footer from \"./components/Footer\";\n\n// import './App.css';\n\nconst App = () => {\n  return (\n    <Router>\n    <div>\n      <Nav />\n      <Wrapper>\n        <Route exact path=\"/\" component={Search} />\n        <Route exact path=\"/books\" component={Search} />\n        <Route exact path=\"/books:id\" component={Saved} />\n      </Wrapper>\n      <Footer />\n    </div>\n  </Router>  \n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}